@using TreinamentoBenner.Core.Helpers
@model TreinamentoBenner.Core.Model.Album
@{
    ViewBag.Title = "Create";
}

<form method="POST">
    <div class="form-horizontal">
        @Html.ValidationSummary()

        <div class="form-group">
            @Html.LabelFor(model => model.GeneroId)
            @Html.DropDownList("GeneroId", null, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GeneroId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ArtistaId)
            @Html.DropDownList("ArtistaId", null, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ArtistaId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo)
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor)
            @Html.TextBoxFor(model => model.Valor, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UrlArte)
            @Html.EditorFor(model => model.UrlArte, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UrlArte, "", new { @class = "text-danger" })
        </div>

        <p>
            <input type="submit" value="Salvar" class="btn btn-default" />
        </p>
    </div>

</form>

<p>
    @Html.ActionLink("Voltar", "Index", null, new { @class="btn btn-default" })
</p>

<p>
    @Html.LinkVoltar("id")
</p>

